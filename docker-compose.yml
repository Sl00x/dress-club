version: '3.7'

services:
  api:
    build:
      context: .
      dockerfile: ./api/dev.Dockerfile
    restart: always
    env_file: .env
    volumes:
      - ./api:/api

  app:
    build:
      context: .
      dockerfile: ./web/dev.Dockerfile
    restart: always
    env_file: ./web/.env
    volumes:
      - ./web:/web
    ports:
      - '3000:3000'

  nginx:
    build: ./nginx
    restart: always
    ports:
      - '3100:80'
    volumes:
      - ./nginx/proxy.conf:/etc/nginx/conf.d/proxy.conf:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - api
  
  minio:
    container_name: ${MINIO_INTERNAL_HOST}
    image: minio/minio:RELEASE.2022-04-16T04-26-02Z
    restart: always
    command: server --address :${MINIO_INTERNAL_PORT} --console-address :9001 /data
    ports:
      - 9000:${MINIO_INTERNAL_PORT}
      - 9001:9001
    volumes:
      - minio:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}

  database:
    container_name: ${DATABASE_HOST}
    command: -p ${DATABASE_PORT}
    image: postgres:12.16
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASS}
      POSTGRES_DB: ${DATABASE_DB}
    ports:
      - 5432:5432
    volumes:
      - database:/var/lib/postgresql/data
      
  adminer:
    image: adminer
    restart: always
    ports:
      - 5010:8080

volumes:
  database:
    driver: local
  minio:
    driver: local
